#!/usr/bin/env bash
set -eo pipefail; [[ $FIGURE_TRACE ]] && set -x

git_archive_all() {
  APP=$1; REV=$2
  APP_DIR="$FIGURE_ROOT/$APP/app"
  unset GIT_DIR GIT_WORK_TREE

  sudo rm -rf $APP_DIR
  mkdir -p $APP_DIR

  git clone -q $FIGURE_ROOT/$APP $APP_DIR &> /dev/null
  pushd $APP_DIR > /dev/null
  git config advice.detachedHead false
  git checkout $REV &> /dev/null
  git submodule update --init --recursive &> /dev/null
  find -name .git -prune -exec rm -rf {} \; > /dev/null

  popd > /dev/null
}

case "$1" in
  git-hook)
    APP=$2

    while read oldrev newrev refname
    do
      # Only run this script for the master branch. You can remove this
      # if block if you wish to run it for others as well.
      if [[ $refname = "refs/heads/master" ]] ; then
        git_archive_all $APP $newrev > /dev/null
        figure receive $APP | sed -u "s/^/"$'\e[1G'"/"
      else
        echo $'\e[1G\e[K'"-----> WARNING: deploy did not complete, you must push to master."
        echo $'\e[1G\e[K'"-----> for example, try 'git push <figure> ${refname/refs\/heads\/}:master'"
      fi
    done
    ;;

  git-upload-pack)
    APP="$(echo $2 | perl -pe 's/(?<!\\)'\''//g' | sed 's/\\'\''/'\''/g')"
    pluginhook git-pre-pull $APP
    cat | git-upload-pack "$FIGURE_ROOT/$APP"
    pluginhook git-post-pull $APP
    ;;

  git-*)
    APP="$(echo $2 | perl -pe 's/(?<!\\)'\''//g' | sed 's/\\'\''/'\''/g')"
    APP_PATH=$FIGURE_ROOT/$APP

    if [[ $1 == "git-receive-pack" && ! -d "$APP_PATH/refs" ]]; then
      git init --bare $APP_PATH > /dev/null
      PRERECEIVE_HOOK="$APP_PATH/hooks/pre-receive"
      cat > $PRERECEIVE_HOOK <<EOF
#!/usr/bin/env bash
set -e; set -o pipefail;

cat | FIGURE_ROOT="$FIGURE_ROOT" figure git-hook $APP
EOF
      chmod +x $PRERECEIVE_HOOK
    fi

    args=$*
    git-shell -c "$args"
    ;;

  help | git:help)
    cat
    ;;

  *)
    exit $FIGURE_NOT_IMPLEMENTED_EXIT
    ;;

esac
