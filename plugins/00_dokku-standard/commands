#!/usr/bin/env bash
set -eo pipefail; [[ $FIGURE_TRACE ]] && set -x

case "$1" in
  trace)
    [[ -d $FIGURE_ROOT/.figurerc ]] || mkdir -p $FIGURE_ROOT/.figurerc
    [[ "$2" == "on" ]] || [[ "$2" == "off" ]] || {
      echo "Valid trace options are [on/off]"
      exit 1
    }

    if [[ "$2" == "on" ]]; then
      echo "Enabling figure trace"
      echo "export FIGURE_TRACE=1" > $FIGURE_ROOT/.figurerc/FIGURE_TRACE
    fi

    if [[ "$2" == "off" ]]; then
      echo "Disabling figure trace"
      rm -f $FIGURE_ROOT/.figurerc/FIGURE_TRACE
    fi
    ;;

  delete)
    figure apps:destroy $2
    ;;

  logs)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1
    APP="$2"; APP_DIR="$FIGURE_ROOT/$APP"

    cd $APP_DIR && fig logs
    ;;

  run)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ -z $3 ]] && echo "Please specify an container to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1
    APP="$2"; APP_DIR="$FIGURE_ROOT/$APP"; CONTAINER="$3"

    shift 3
    cd $APP_DIR && fig run $CONTAINER "$@"
    ;;

  url | urls)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1
    APP="$2"; SCHEME="http"; SSL="$FIGURE_ROOT/$APP/tls"; WILDCARD_SSL="$FIGURE_ROOT/tls"

    if [[ -e "$SSL/server.crt" && -e "$SSL/server.key" ]] || [[ -e "$WILDCARD_SSL/server.crt" && -e "$WILDCARD_SSL/server.key" ]]; then
      SCHEME="https"
    fi

    if [[ -f "$FIGURE_ROOT/$APP/VHOST" ]]; then
      case "$1" in
        url)
          echo "$SCHEME://$(head -n1 "$FIGURE_ROOT/$APP/VHOST")"
        ;;
        urls)
          for vhost in $(< "$FIGURE_ROOT/$APP/VHOST"); do
            echo "$SCHEME://$vhost"
          done
        ;;
      esac
    elif [[ -f "$FIGURE_ROOT/VHOST" ]]; then
      echo "$SCHEME://$(< "$FIGURE_ROOT/VHOST")"
    else
      echo "$SCHEME://$(< "$FIGURE_ROOT/HOSTNAME"):$(< "$FIGURE_ROOT/$APP/PORT")"
    fi
  ;;

  version)
    cat "$FIGURE_ROOT/VERSION" || {
      echo "Unable to determine figure's version" 2>&1
      exit 1
    }
    ;;

  help)
    cat && cat<<EOF
    logs <app> [-t]                                 Show the last logs for an application (-t follows)
    run <app> <container> <cmd>                     Run a command in the environment of an application
    url <app>                                       Show the first URL for an application (compatibility)
    urls <app>                                      Show all URLs for an application
    version                                         Print figure's version
EOF
    ;;

  *)
    exit $FIGURE_NOT_IMPLEMENTED_EXIT
    ;;

esac
