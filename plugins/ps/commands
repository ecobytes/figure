#!/usr/bin/env bash
set -eo pipefail; [[ $FIGURE_TRACE ]] && set -x

case "$1" in
  ps)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1

    APP="$2"; APP_DIR="$FIGURE_ROOT/$APP/app"

    FIG_ARGS=$(: | pluginhook fig-args $APP ps)
    cd $APP_DIR && fig $FIG_ARGS ps
    ;;

  ps:config)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1

    APP="$2"; APP_DIR="$FIGURE_ROOT/$APP/app"

    rm -f /etc/supervisor/conf.d/figure-$APP.conf

    FIG_ARGS=$(: | pluginhook fig-args $APP up)
    cat << CONF >> /etc/supervisor/conf.d/figure-$APP.conf
[program:figure-${APP}]
command=/usr/local/bin/figure post-deploy $APP
autostart=true
autorestart=true
user=figure

CONF

    supervisorctl reread
    supervisorctl update
    ;;

  ps:start)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1

    APP="$2"; APP_DIR="$FIGURE_ROOT/$APP/app"

    figure ps:config $APP

    pluginhook pre-deploy $APP
    supervisorctl start figure-$APP
    ;;

  ps:stop)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1

    APP="$2";

    rm -f /etc/supervisor/conf.d/figure-$APP.conf
    supervisorctl stop figure-$APP
    supervisorctl reread
    supervisorctl update
    ;;

  ps:restart)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1

    APP="$2"; APP_DIR="$FIGURE_ROOT/$APP/app"

    figure ps:config $APP

    supervisorctl stop figure-$APP

    FIG_ARGS=$(: | pluginhook fig-args $APP stop)
    cd $APP_DIR && fig $FIG_ARGS stop

    pluginhook pre-deploy $APP
    supervisorctl start figure-$APP
    ;;

  ps:restartall)
    shopt -s nullglob
    for app in $FIGURE_ROOT/*/CONTAINER; do
      APP=$(basename "$(dirname $app)");
      figure ps:restart $APP
    done
    ;;

  help | ps:help)
    cat && cat<<EOF
    ps <app>                                        List processes running in app container(s)
    ps:start <app>                                  Start app container(s)
    ps:stop <app>                                   Stop app container(s)
    ps:restart <app>                                Restart app container(s)
    ps:restartall                                   Restart all deployed app containers
EOF
    ;;

  *)
    exit $FIGURE_NOT_IMPLEMENTED_EXIT
    ;;

esac
