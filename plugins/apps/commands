#!/usr/bin/env bash
set -eo pipefail; [[ $FIGURE_TRACE ]] && set -x

case "$1" in
  apps)
    echo "=== My Apps"
    find $FIGURE_ROOT -follow -maxdepth 1 -type d  \( ! -iname ".*" \)  -not -path $FIGURE_ROOT/tls | sed 's|^\./||g' | sed 's|'$FIGURE_ROOT'\/||' | tail -n +2 | sort
    ;;

  apps:create)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ -d "$FIGURE_ROOT/$2" ]] && echo " !    Name is already taken" && exit 1
    APP="$2"

    mkdir -p "$FIGURE_ROOT/$APP"
    echo "Creating $APP... done"
    ;;

  apps:copy-volume)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ -z $3 ]] && echo "Please specify an container to run the command on" && exit 1
    [[ -z $4 ]] && echo "Please specify the internal location" && exit 1
    [[ -z $5 ]] && echo "Please specify the location to copy from" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo " !    App $APP does not exist" && exit 1
    APP="$2"; CONTAINER="$3"; CONTAINER_LOCATION="$4"; LOCATION="$5"
    VOLUME_LOCATION="$FIGURE_ROOT/$APP/volumes/$CONTAINER$CONTAINER_LOCATION"

    mkdir -p "$FIGURE_ROOT/$APP/volumes/$CONTAINER"
    sudo mkdir -p $VOLUME_LOCATION
    sudo cp -r $LOCATION $VOLUME_LOCATION
    echo "Copying volume... done"
    ;;

  apps:destroy)
    [[ -z $2 ]] && echo "Please specify an app to run the command on" && exit 1
    [[ ! -d "$FIGURE_ROOT/$2" ]] && echo "App $2 does not exist" && exit 1
    [[ "$2" == "tls" ]] && echo "Unable to destroy tls directory" && exit 1
    APP="$2"; IMAGE="figure/$APP"; FORCE="$3"

    if [[ "$FORCE" != "force" ]]; then
      echo " !    WARNING: Potentially Destructive Action"
      echo " !    This command will destroy $APP (including all add-ons)."
      echo " !    To proceed, type \"$APP\""
      echo ""

      read -p "> " app_name
      if [[ "$app_name" != "$APP" ]]; then
        echo " !    Confirmation did not match $APP. Aborted."
        exit 1
      fi
    fi

    echo "Destroying $APP (including all add-ons)"

    pluginhook pre-delete $APP

    pluginhook post-delete $APP
    ;;

  help | apps:help)
    cat && cat<<EOF
    apps                                            List your apps
    apps:create <app>                               Create a new app
    apps:destroy <app>                              Permanently destroy an app
    apps:copy-volume <app> <container> <container_location> <location>
EOF
    ;;

  *)
    exit $FIGURE_NOT_IMPLEMENTED_EXIT
    ;;

esac
